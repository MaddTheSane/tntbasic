------------------------------------------------------------------------------
TUTORIAL 1 - Introduction to Moan
------------------------------------------------------------------------------

What is Moan?
	Moan is TNT Basic's powerful movement and animation system. It allows you to set sprites and viewports moving or animating with one simple command. Once started you can forget about them and they'll keep going on their own! Moan is an acronym for MOvement and ANimation. 

Simple Moaning
	Moan actually consists of two sets of commands. One set consists of high level, quick and easy to use commands that allow you to set animations or movements off for each sprite in turn. The low level advanced set allows you to install miniture programs into sprites or viewports to control their movement and animation.

Making Something Move
	Here's a simple program to move sprite 1 50 pixels to the right at a speed of 1 pixel a frame, try it out:

sprite 1,100,100,1	' put the sprite on the screen
move sprite 1,50,0,1	' set it moving
while not mouse button	' run until the mouse is pressed
	draw frame
wend	

You can also use the move viewport command to set viewports scrolling in a similar manner.
You can test if a movement is finished for a sprite or viewport using the 'sprite moving' and 'viewport moving' functions.

Making something animate
	You can use similarly simple programs to animate sprites too. The following program animates sprite 1, showing image 0 for 5 frames, image 1 for 5 frames then image 2 for 10 frames, in a loop. The -1 is the number of times to loop the animation, -1 means forever, any other number will repeat the animation that number of times.

sprite 1,100,100,0	' put the sprite on the screen
animate sprite 1,-1, 0,5 to 1,5 to 2,10		' set the animation going
while not mouse button	' run until the mouse is pressed
	draw frame
wend
	
The Moan Language
	It was mentioned briefly before that Moan has two sets of commands. The second set, introduced here, is for manipulating and programming 'Moan Channels'.
A Moan channel is a way of connecting movement and animation commands to several sprites, or viewports, at the same time. For example, by attaching all your sprites to the same channel, and then issuing a moan move command to the channel, you can move all sprites at once. The fun doesn't stop there however, you can write mini-programs that run inside the channels in parallel to your main TNT Basic program. These programs can perform complex behaviours that once initiated from your main program can be forgetten about until they are finished.

Programming in Moan
	Moan programs are written in strings and are installed into channels at runtime. They are manipulated in exactly the same way as normal strings, and so can be joined or modified or generated by your program on the fly.

The first thing to note about moan programming is that it IS different to programming TNT Basic. There are very few moan commands, this is to make it very simple to compile the programs quickly at runtime. All moan commands are composed of a single UPPER CASE letter, here is an example moan program:

str myMoanProgram = "M 50,0,1"

Can you guess what it does? It's actually a 'move' command. This program will move all items attached to the channel by 50 pixels horizontally, 0 pixels vertically and at a speed of 1 pixel a frame. It's equivalent to the high level moan command:

move sprite 1,50,0,1

Except that command will only move sprite 1, whereas the moan program, if put into a moan channel, would move everything attached to the channel.

It was mentioned that moan programs only consist of single upper case letters; what about the lower case ones? All lower case letters are completely ignored by the moan compiler, this means you can insert them throughout the moan program to remind you what's going on:

str myMoanProgram2 = "Move everything 50,0,1"

or even

str myMoanProgram3 = "Marigolds 50,0,1"

Remember, you can only do this with lower case letters, upper case letters are interpreted as commands! Remember, when reading a moan program, just ignore all the lowercase letters and you'll see what the moan compiler sees.

Errors in Moan Programs
	What happens if you make an error in your moan program? As moan strings are not compiled until your program installs them into a channel, any errors in the program will not be brought to your attention until after your program is running. This means any moan program errors will cause runtime errors rather than compile errors, runtime errors are not displayed in Hieroglyph, but are reported in TNT Basic's console window.

The most common error with a moan program is when you accidentally capitalise a word and the moan compiler thinks it's a command. Moan will try its best to report errors to you, but sometimes it underlines the word after an error by mistake. In general, it will point you to roughtly where the error is though.

Using a Channel to Make Something Move
	Now that you understand the basics of moan programs, lets install one into a moan channel and get it to move some sprites around. First define your moan program:

str myMoanProgram = "Move 50,0,1"

Now install it into a moan channel (choose any channel id, zero is used here):

set channel program 0,myMoanProgram

Now put a sprite on screen and attach it to the channel:

sprite 1,100,100,1
add sprite to channel 1,0

That's it, now everytime draw frame is called sprite 1 will have moved a bit further, try it with:

while not mouse button
	draw frame
wend

Try adding more sprites to the channel and see what happens!

Linking Several Moan Commands
	You can link moan commands together in sequence, each one will be executed when the previous command finishes. Moan commands are seperated by either a space or a semi-colon ';'.

For example:

str myProg="Move right 100,0,2; Move left -100,0,2"

or

str myProg2="M 100,0,2 M -100,0,2"

Both programs have the same affect.
	
Making Something Animate
	Animation is just as easy in moan, just use the 'A' command. Its syntax is:

	A numloops, (frame,delay), (frame,delay), ....

Where numloops is the number of times to run the entire anim sequence for, -1 meaning forever.

Example:

str myprog="A -1,(1,2),(2,2),(3,2)"

That program shows image 1 for 2 frames, image 2 for 2 frames, image 3 for 2 frames and then repeats. Try it with the sprite movement example earlier.
	
Multi Channel Moaning
	Moan commands run in sequence, if you have an animate command followed by a move command, the move command will not start until the animation is finished. If the animation is set to loop forever then the movement will never start. How do you get around this?

To get moan commands to run in parallel, you must install them onto separate moan channels. You could set one channel up to control sprite animation, and the other to control movement.

When a sprite or viewport is on two different channels, the results of the movement/animation from each channel are combined before the sprite is drawn. If one channel moves everything upwards, and another channel moves everything right, then a sprite that is on both of these channels would move up and right.
	
Adding Wind to Your Programs
	A good use of multi channel moaning is to have one channel set aside for moving all sprites at once. Try this out on your existing game, you don't need to be using any other moan channels.

set channel program 1,"Move 10000,0,1"
add sprite 0,1
add sprite 1,1
add sprite 2,1
' add all your games sprites

Now, you will find that when you play your game, all the sprites drift slowly off the side of the screen! By modifying the program you can produce a simple wind affect in any direction.

NB: A better way of adding wind is to set up a loop using labels, this is explained in the tutorial 2.

------------------------------------------------------------------------------
TUTORIAL 2 - Advanced Moan Programming
------------------------------------------------------------------------------

Advanced Moan Programming
Moan programs can use simple variables called 'registers', registers can only store integers. Each moan channel has access to 10 local registers that are private to it, and 26 global moan registers that are shared with all other moan channels.

Local registers are referred to by R0 - R9. Global registers are referred to by RA - RZ. Note the use of capitals.

You can assign a register using the 'Let' command (or 'L'), as so:

str myMoanProgram = "L R0=5*30"

Once assigned, you can make use of the values in your movement or animation commands:

str myMoanProgram = "Let R0=10 Let R1=4 Move R0,R1,1"

This command moves right 10 pixels and down 4 pixels at a speed of 1 pixel per frame.

There are also 3 special registers your program can access, these are called X, Y and I and hold the x,y location and the image index of the first sprite/viewport on the channel.

For viewports, I is always -1 and has no affect if assigned.

To set a sprite/viewport's X and Y location to 10, 50 you would do:

str myMoanProgram = "L X = 10; L Y = 50"

Using 'For' Loops
Moan programs can also use For loops. These aren't as flexible as the for loops in TNT Basic, as they can only have a step of +1, but otherwise they are just as useful.

You could use a For loop instead of a 'Move' command to set a sprite's location by assigning it repeatedly inside a loop. See the following example:

str myBrokenMoanProgram = "For R0 = 0 To 300; Let X = R0; Next"

You will find however, that if you run this program the sprite will fly across this screen almost instantaneously. This is because the moan program is running much faster than the screen is being updated, and so you only see the sprite at its start and end position, and nowhere inbetween. To fix it you must add a 'Pause' command into the program. A Pause command causes the moan program to wait until the frame has been drawn before continuing. Pauses are not needed when using Move or Animate commands, but when directly changing X,Y or I registers, you have to pause so the results get seen.

str myFixedMoanProgram = "For R0 = 0 To 300; Let X = R0; Pause; Next"

Accessing Channel Registers From Outside the Moan Program
You can read/write registers for a moan channel with the 'set channel reg' and 'channel reg' commands. This is useful to allow you to alter the behaviour of moan programs on the fly.
See the 'channel reg' and 'set channel reg' help pages for more information.

Using Labels and Jumps

Moan programs can also make use of labels and goto statements (which are called 'Jumps' in moan). As with commands, labels are composed of a single UPPER case letter. This limits each program to having a maximum of 26 labels. A label is defined as such:

str myInfiniteLoop = "Begin: Jump Begin"

The 'Jump' statement here will jump to the label at the beginning of the program, causing the program to get stuck in a loop. However, if you were to run this program on a channel, TNT Basic would not get stuck in an infinite loop, even though the channel would. This is because each moan channel runs in parallel to your main program, so if one channel is stuck in a loop, it doesn't affect other channels or your main program (except maybe making things a little slower).

Wind Again
	The previous wind example used a move command to move all the sprites to the right. The problem with this command was that they would only move 10000 pixels, then they would stop. What you really need is a program that loops so that the wind will never stop, here it is:

str myNewWind = "Begin: Move 1,0,-2; Jump Begin"

Here -2 is used as the speed. Using a negative speed means complete the movement in that many steps rather than at that speed. So using -2 instead of 2 means do the movement in 2 steps, rather than at 2 pixels per frame. This means the wind will move the sprites 1 pixel in two steps, or half a pixel a frame, much more of a gentle breeze!
As soon as the movement is complete, it starts again.

Using If Statements
Moan programs can also make use of very simple If/Then statements. An If statement in moan can only have a Jump statement as its body, so all moan If statements take the form: "If condition, Jump label".

The conditions are the same as TNT Basic's normal expressions, you can use =, >, <, <=, >= and <>.

str myMoanProg = "If R0>R1 Jump A; Move 50,50,1 A: Move -50,-50,1"

This program will skip a move statement if R0 is more than R1. Moan If statements are not very flexible, and sometimes quite difficult to use, but their simplicity is necessary to keep moan channels fast and make moan programs quick to compile.