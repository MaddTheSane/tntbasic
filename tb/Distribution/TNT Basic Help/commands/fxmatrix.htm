<HTML>  
<HEAD>
  <META HTTP-EQUIV="content-type" CONTENT="text/html;charset=iso-8859-1">
  <TITLE>FX Matrix</TITLE>
  <META NAME="DP" CONTENT="1.9.1/3.1.1">
  <META NAME="AppleTitle" CONTENT="FX Matrix">
  <META NAME="AppleTarget" CONTENT="_right">
  <META NAME="DESCRIPTION" CONTENT="Applies a kernal filter to a canvas as it copies it">
</HEAD>
<BODY BGCOLOR="#ffffff" BACKGROUND="../gfx/chalk.gif">

<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="349"
HEIGHT="177">
  <TR VALIGN="TOP">
    <TD HEIGHT="18"><B><FONT COLOR="#330099" SIZE="+1" FACE="Helvetica,Arial">FX Matrix</FONT></B></TD> 
  </TR>
  <TR>
    <TD HEIGHT="41">
      <BLOCKQUOTE>
        <P><FONT SIZE="-1" FACE="Geneva">Applies a kernal filter to a canvas as it copies it</FONT></P></BLOCKQUOTE>

      <P><B><FONT COLOR="#330099" SIZE="-1" FACE="Helvetica,Arial">Syntax</FONT></B>
    </TD>
  </TR>
  <TR>
    <TD HEIGHT="43">
      <BLOCKQUOTE>
        <P><FONT SIZE="-1" FACE="Geneva,Arial">FX Matrix <i>matrix[],sourceCanvas to destCanvas</i></FONT></P></BLOCKQUOTE>

      <P><B><FONT COLOR="#330099" SIZE="-1" FACE="Helvetica,Arial">Description</FONT></B>
    </TD>
  </TR>
  <TR>
    <TD HEIGHT="40">
      <BLOCKQUOTE>
        <FONT SIZE="-1" FACE="Geneva"><p>FX Matrix is really a bit of a toy command. Basically it allows you to apply what are known as 'kernal filters' to your images. It copies the contents of <i>sourceCanvas</i> to <i>destCanvas</i> applying the kernal filter defined by the array <i>matrix[]</i> as the image is copied.</p><p><b>NOTE:</b> The FX Matrix command does not work in <A HREF="../commands/graphicsmode.htm">Graphics Mode Hardware</A>.</p><p><b>More on kernal filters</b><br>A kernal filter is a grid of numbers, which are used to calculate a weighted average of all the pixels around a given pixel to generate a result one. The grid is moved across the image, 1 pixel at a time, always operating on the pixel in the centre of the grid, and filtering in it's neighbours as dictated by the weighting given to it by the grid.</p><p>This is probably better explained with an example:</p><p>If you had the matrix:</p><p>0 1 0<br>1 2 1<br>0 1 0</p><p>And applied it to an image, a pixel in the resultant image would be calculated by having 2*the colour value of itself, then 1* the colour value of the pixels above, below, left and right of it. The result would then be divided by the number of pixels factored in to give an average. In this case there were 2+1+1+1+1=6 pixels factored in. This would have the affect of a pixel retaining it's original colour, but being heavily influenced in colour by its neighbours. This results in colour smoothing - or a 'gaussian blur' as photoshop calls it.</p><p>You can produce some really crazy convolutions of the image by typing randomly chosen numbers into the matrix. Photoshop has a kernal filter command in it's filter menu, which is what a lot of its plug in filters are based on.</p><p>For instance, to emboss an image, you make each pixel have it's original value + the value of the pixel below and right (where the 'light' is shining from), and less the value of the pixel above and left (where the 'shadow' is). If all the image is the same colour, the resultant pixel is the same colour as the original, as the pixel above left and below right cancel each other out. But if there's a colour contrast, such as on the edge of a block of colour, it will become embossed.</p><p>An example matrix for embossing is:<br>-10 0 0<br>0 5 0<br>0 0 10</p><p>So that's the theory anyway. In TNT Basic, you make these matrices by filling out a 2D array with the numbers.</p><p>Eg:<br></FONT><FONT COLOR="#000000" SIZE="-2" FACE="Monaco,Arial"><FONT COLOR="#0000FF">int</FONT> mymatrix[3,3]</p><p>mymatrix[0,0]=-10 <FONT COLOR="#FF0000">'top left</FONT><br>mymatrix[1,0]=0 <FONT COLOR="#FF0000">'top middle</FONT><br>mymatrix[2,0]=0 <FONT COLOR="#FF0000">' top right</FONT><br>mymatrix[0,1]=0 <FONT COLOR="#FF0000">' left middle</FONT><br>mymatrix[1,1]=5 <FONT COLOR="#FF0000">' middle</FONT><br>mymatrix[2,1]=0 <FONT COLOR="#FF0000">' right middle</FONT><br>mymatrix[0,2]=0 <FONT COLOR="#FF0000">' bottom left</FONT><br>mymatrix[1,2]=0 <FONT COLOR="#FF0000">' bottom middle</FONT><br>mymatrix[2,2]=10 <FONT COLOR="#FF0000">' bottom right</FONT><br></FONT><FONT SIZE="-1" FACE="Geneva"></p><p>Or equivalently and probably easier to read:<br></FONT><FONT COLOR="#000000" SIZE="-2" FACE="Monaco,Arial"><br><FONT COLOR="#0000FF">int</FONT> mymatrix[3,3]<br><FONT COLOR="#0000FF">int</FONT> i,j</p><p><FONT COLOR="#0000FF">for</FONT> i=0 <FONT COLOR="#0000FF">to</FONT> 3<br>&nbsp;&nbsp;&nbsp;&nbsp;<FONT COLOR="#0000FF">for</FONT> j=0 <FONT COLOR="#0000FF">to</FONT> 3<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT COLOR="#0000FF">read</FONT> mymatrix[i,j]<br>&nbsp;&nbsp;&nbsp;&nbsp;<FONT COLOR="#0000FF">next</FONT> j<br><FONT COLOR="#0000FF">next</FONT> i</p><p><FONT COLOR="#0000FF">data</FONT> -10,0,0<br><FONT COLOR="#0000FF">data</FONT> 0,5,0<br><FONT COLOR="#0000FF">data</FONT> 0,0,10<br></FONT><FONT SIZE="-1" FACE="Geneva"></p><p>Once the matrix is filled out, apply it to your image with the FX Matrix command as so:</p><p>FX Matrix mymatrix[],sourceCanvas to destCanvas</p><p>Where <i>mymatrix</i> is the matrix to apply, the <i>sourceCanvas</i> is the number of a canvas to read from and <i>destCanvas</i> is the number of the canvas to draw the results in.</p><p>The FX Matrix example demonstrates several different FX Matrix effects and can be downloaded from <a HREF="http://www.tntbasic.com/download/examples/files/FX_Matrix_Example.sit">http://www.tntbasic.com/download/examples/files/FX_Matrix_Example.sit</a>.</p><p>Unfortunately, the FX Matrix command isn't very fast, so probably won't be able to do real time fx unless you have a fast machine. But it's cool to use on your title screen, or for preprocessing your graphics as the game loads.</p>See also <A HREF="../commands/copycanvas.htm">Copy Canvas</A>.<br></FONT>
      </BLOCKQUOTE>
    </TD>
  </TR>
  <TR VALIGN="TOP">
    <TD ALIGN="CENTER" HEIGHT="34"><FONT SIZE="-2" FACE="Geneva,Arial"><HR><A
      HREF="../draw/draw_frameset.htm">Table of contents</A></FONT></TD> 
  </TR>
</TABLE>

</BODY>
</HTML>
